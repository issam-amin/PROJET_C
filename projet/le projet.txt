#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <conio.h>
#include <Windows.h>
#include <string.h>

void gotoxy(int x, int y) {
    COORD coord;
    coord.X = x;
    coord.Y = y;
    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
}
void clearScreen() {
    #ifdef _WIN32
        system("cls"); // Pour Windows
    #else
        system("clear"); // Pour Linux/Unix
    #endif
}

typedef struct
{
    int jour,mois,anne;
}date;
typedef struct
{
    int ISBN;
    char *TitreL;
    date date_emprunt;
    date date_retour;
    char *CNE;
}emprunt;

//**traitement des cas de date de retour**
date traitementdate_retour(int j,int m,int a)
{
    date dateretour_traite;
    //traitement des cas de mois fevrier  et mois decembre
    //mois fevrier
    if(m==2 && j+14>28)
    {
         m++;
        int temps;
        temps=28 - j;
        j= 14 -temps;
        dateretour_traite.jour=j;
        dateretour_traite.mois=m;
        dateretour_traite.anne=a;
        return dateretour_traite;

    }
    else if (m==12 && j+14>30)
    {
        a++;
        int temps;
        temps=31 - j;
        j= 14 -temps;
        dateretour_traite.jour=j;
        dateretour_traite.mois=1;
        dateretour_traite.anne=a;
        return dateretour_traite;
    }
    switch (m)
    {
        case 4:
        case 6:
        case 9:
        case 11:
            if( j+14> 30)
            {
                m++;
                int temps;
                temps=30 - j;
                j= 14 -temps;
                dateretour_traite.jour=j;
                dateretour_traite.mois=m;
                dateretour_traite.anne=a;
                return dateretour_traite;
            }
            else
            {
                dateretour_traite.jour=j+14;
                dateretour_traite.mois=m;
                dateretour_traite.anne=a;
                return dateretour_traite;
            }
        default:
        if( j+14> 31)
            {
                m++;
                int temps;
                temps=31 - j;
                j= 14 -temps;
                dateretour_traite.jour=j;
                dateretour_traite.mois=m;
                dateretour_traite.anne=a;
                return dateretour_traite;
            }
            else
            {
                dateretour_traite.jour=j+14;
                dateretour_traite.mois=m;
                dateretour_traite.anne=a;
                return dateretour_traite;
            }
    }
}

void AJOUT_EMPRUNT()
{
    emprunt *ajouter;
    //allocation d'espace pour le variable de type emprunt
    ajouter=malloc(sizeof(emprunt));
    ajouter->TitreL=malloc(30*sizeof(char));
    ajouter->CNE=malloc(14*sizeof(char));
    //collection des infos
    printf("******************************************** l'ajout d'un emprunt ***********************************************************\n");
    printf("veuillez entrer l'ISBN du livre:");
    scanf("%d",&ajouter->ISBN);
    int v= Recherche_empruntV2(ajouter->ISBN);
    if(v==1){
    printf("\nveuillez entrer le Titre du livre");
    scanf("%s",ajouter->TitreL);
    printf("\nveuillez entrer le CNE d'etudiant");
    scanf("%s",ajouter->CNE);
   //int v= Recherche_empruntV2(ajouter->ISBN);

    //ajoutant la date d'emprunt
    time_t now=time(NULL);
    struct tm *todaystime = localtime(&now);
    int J,M,A;
   J= ajouter->date_emprunt.jour=todaystime->tm_mday;
   M=ajouter->date_emprunt.mois=todaystime->tm_mon+1;
   A=ajouter->date_emprunt.anne=todaystime->tm_year+1900;

   //ajoutant la date retour apres le traitement des cas
   ajouter->date_retour=traitementdate_retour(J,M,A);

   //On rempli le fichier maintenant
   //declation du pointeur et l'ouverture de fichier
   FILE*Pajout;
   FILE*Phistorique;
    Pajout=fopen("registre_emprunt.txt","a");
    Phistorique=fopen("historique_emprunt.txt","a");
    //remplicage du fichier de registre emprunt et aussi l historique
    fprintf(Pajout,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",ajouter->ISBN,ajouter->TitreL,ajouter->CNE,ajouter->date_emprunt.jour,ajouter->date_emprunt.mois,ajouter->date_emprunt.anne,ajouter->date_retour.jour,ajouter->date_retour.mois,ajouter->date_retour.anne);
    fprintf(Phistorique,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",ajouter->ISBN,ajouter->TitreL,ajouter->CNE,ajouter->date_emprunt.jour,ajouter->date_emprunt.mois,ajouter->date_emprunt.anne,ajouter->date_retour.jour,ajouter->date_retour.mois,ajouter->date_retour.anne);

    printf("EMRUNT AJOUTE AVEC SUCCE");
    getch();
    clearScreen();
    printf("N'OUBLIEZ PAS QUE LA DATE DE RETOUR EST LE %d/%d/%d",ajouter->date_retour.jour,ajouter->date_retour.mois,ajouter->date_retour.anne);
    fclose(Pajout);
    fclose(Phistorique);
    free(ajouter);
    free(ajouter->TitreL);
    free(ajouter->CNE);
   }
   else if(v==0)
   {
        emprunt *Recherche;
    Recherche=malloc(sizeof(emprunt));
    Recherche->TitreL=malloc(35*sizeof(char));
    Recherche->CNE=malloc(14*sizeof(char));
       FILE *Precherche;
    Precherche=fopen("registre_emprunt.txt","r");

        while(!feof(Precherche)){
        //le scan des infos de fichier
        fscanf(Precherche,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&Recherche->ISBN,Recherche->TitreL,Recherche->CNE,&Recherche->date_emprunt.jour,&Recherche->date_emprunt.mois,&Recherche->date_emprunt.anne,&Recherche->date_retour.jour,&Recherche->date_retour.mois,&Recherche->date_retour.anne);
        if(Recherche->ISBN == ajouter->ISBN)
          break;

        }



       printf("\nLE LIVRE: %s  EST ENCORE EMPRUNTE \n DATE DE RETOUR DE LIVTRE : %d/%d/%d\n",Recherche->TitreL,Recherche->date_retour.jour,Recherche->date_retour.mois,Recherche->date_retour.anne);
            getch();
            clearScreen();
            printf("        !!        ETAT : NON DISPONIBLE");
            getch();
            free(Recherche);
            free(Recherche->TitreL);
            free(Recherche->CNE);
            fclose(Precherche);

   }


}
void affichage_en_cour()
{
    //declaration du pointeur sur le fichier et ouverture du fichier
int i=4;
emprunt *afficher;
afficher=malloc(sizeof(emprunt));
afficher->TitreL=malloc(35*sizeof(char));
afficher->CNE=malloc(25*sizeof(char));
FILE *Paffiche;
Paffiche=fopen("registre_emprunt.txt","r");
printf("****************************** LES EMPRUNTS EN COURS  ******************************\n");
printf("ÚÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿\n");
printf("³ISBN"); gotoxy(13,2);printf("³TITRE DE LIVRE");gotoxy(48,2);printf("³CNE");gotoxy(62,2);printf("³DATE D'EMPRUNT");gotoxy(80,2);printf("³DATE DE RETOUR³");

while(!feof(Paffiche)){
printf("\nÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´\n");
        //le scan des infos de fichier
    fscanf(Paffiche,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&afficher->ISBN,afficher->TitreL,afficher->CNE,&afficher->date_emprunt.jour,&afficher->date_emprunt.mois,&afficher->date_emprunt.anne,&afficher->date_retour.jour,&afficher->date_retour.mois,&afficher->date_retour.anne);
        //affichage
    //printf("\nle %d'eme livre =>\n",i);
   // printf("ISBN: %d , TITRE DE LIVRE : %s , CNE D'ETUDIANT : %s , DATE D'EMPRUNT: %d/%d/%d ,DATE DE RETOUR DE LIVTRE : %d/%d/%d\n",afficher->ISBN,afficher->TitreL,afficher->CNE,afficher->date_emprunt.jour,afficher->date_emprunt.mois,afficher->date_emprunt.anne,afficher->date_retour.jour,afficher->date_retour.mois,afficher->date_retour.anne);
    gotoxy(0,i);printf("³%d",afficher->ISBN); gotoxy(13,i);printf("³%s",afficher->TitreL);gotoxy(48,i);printf("³%s",afficher->CNE);gotoxy(62,i);printf("³%d/%d/%d",afficher->date_emprunt.jour,afficher->date_emprunt.mois,afficher->date_emprunt.anne);gotoxy(80,i);printf("³%d/%d/%d    ³",afficher->date_retour.jour,afficher->date_retour.mois,afficher->date_retour.anne);

    i+=2;
}
printf("\nÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ\n");
fclose(Paffiche);
free(afficher);
free(afficher->TitreL);
free(afficher->CNE);
}

int Recherche_emprunt()
{
    printf("\t******************* RECHERCHE UNE EMPRUNTE *******************\n");
    //les variable ou on vas stocker
    int ISBNR,c=0;
    emprunt *Recherche;
    Recherche=malloc(sizeof(emprunt));
    Recherche->TitreL=malloc(35*sizeof(char));
    Recherche->CNE=malloc(14*sizeof(char));

    //ouverture de fichier
    FILE *Precherche;
    Precherche=fopen("registre_emprunt.txt","r");

    //stockage des données
    printf("entrer le ISBR  de livre que vous voulez chercher:");
    scanf("%d",&ISBNR);
     //exraction de fichier et comparaison
    clearScreen();
    while(!feof(Precherche)){
        //le scan des infos de fichier
        fscanf(Precherche,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&Recherche->ISBN,Recherche->TitreL,Recherche->CNE,&Recherche->date_emprunt.jour,&Recherche->date_emprunt.mois,&Recherche->date_emprunt.anne,&Recherche->date_retour.jour,&Recherche->date_retour.mois,&Recherche->date_retour.anne);
        if(Recherche->ISBN == ISBNR)
        {
            c=1;
            printf("\nLE LIVRE: %s  EST ENCORE EMPRUNTE \n DATE DE RETOUR DE LIVTRE : %d/%d/%d\n",Recherche->TitreL,Recherche->date_retour.jour,Recherche->date_retour.mois,Recherche->date_retour.anne);
            getch();
            clearScreen();
            printf("        !!        ETAT : NON DISPONIBLE");
            getch();
            fclose(Precherche);
            free(Recherche);
        return 0;

        }
    }
    if(c==0)
        {
            printf("CE LIVRE N'EXISTE PAS DANS LE REGISTRE DES EMPRUNTS");
            getch();
            printf("\nVOUS POUVEZ LE RESERVE SI IL EST DISPONIBLE DANS CATALOGUE DEBIBLIO ENSAH ");
            getch();
            fclose(Precherche);
            free(Recherche);
            return 1;
        }


}
int Recherche_empruntV2(int ISBNR)
{
    //les variable ou on vas stocker
    int c=0;
    emprunt *Recherche;
    Recherche=malloc(sizeof(emprunt));
    Recherche->TitreL=malloc(35*sizeof(char));
    Recherche->CNE=malloc(14*sizeof(char));

    //ouverture de fichier
    FILE *Precherche;
    Precherche=fopen("registre_emprunt.txt","r");

     //exraction de fichier et comparaison
    while(!feof(Precherche)){
        //le scan des infos de fichier
        fscanf(Precherche,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&Recherche->ISBN,Recherche->TitreL,Recherche->CNE,&Recherche->date_emprunt.jour,&Recherche->date_emprunt.mois,&Recherche->date_emprunt.anne,&Recherche->date_retour.jour,&Recherche->date_retour.mois,&Recherche->date_retour.anne);
        if(Recherche->ISBN == ISBNR)
        {
            c=1;
            return 0;

        }
    }
    if(c==0)
        {
            return 1;
        }

free(Recherche);
free(Recherche->TitreL);
free(Recherche->CNE);
}
void Recherche_Historique()
{
    printf("\t******************* RECHERCHER DE L'HISTORIQUE DES EMPRUNTES D'UN ETUDIANT *******************\n");
    //les variable ou on vas stocker
    char *CNER;
    int c=0;
    emprunt *Recherche;
    Recherche=malloc(sizeof(emprunt));
    Recherche->CNE=malloc(14*sizeof(char));
    Recherche->TitreL=malloc(35*sizeof(char));
    CNER=malloc(14*sizeof(char));

    //ouverture de fichier
    FILE *Precherche;
    Precherche=fopen("historique_emprunt.txt","r");

    //stockage des données
    printf("entrer VOTRE CNE:");
    scanf("%s",CNER);
     //exraction de fichier et comparaison
    clearScreen();
    while(!feof(Precherche)){
        //le scan des infos de fichier
        fscanf(Precherche,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&Recherche->ISBN,Recherche->TitreL,Recherche->CNE,&Recherche->date_emprunt.jour,&Recherche->date_emprunt.mois,&Recherche->date_emprunt.anne,&Recherche->date_retour.jour,&Recherche->date_retour.mois,&Recherche->date_retour.anne);
        if(strcmp(Recherche->CNE,CNER)==0)
        {
            c=1;
            break;
        }
    }
    fclose(Precherche);
    if(c==0)
        {
            printf("VOUS N'AVEZ AUCUNE EMPRUNT");
            getch();
        }
    else if(c==1)
    {
        int i=4;
        Precherche=fopen("historique_emprunt.txt","r");

        printf("TAPEZ ENTRER POUR L'ACCES A VOTRE HISTORIQUE\n ");
        getch();
        clearScreen();
        printf("********************************** HISTORIQUE D'EMPRUNTS ***********************************\n");
printf("ÚÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿\n");
printf("³ISBN"); gotoxy(13,2);printf("³TITRE DE LIVRE");gotoxy(48,2);printf("³CNE");gotoxy(62,2);printf("³DATE D'EMPRUNT");gotoxy(80,2);printf("³DATE DE RETOUR³");

        while(!feof(Precherche)){
        //le scan des infos de fichier
        fscanf(Precherche,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&Recherche->ISBN,Recherche->TitreL,Recherche->CNE,&Recherche->date_emprunt.jour,&Recherche->date_emprunt.mois,&Recherche->date_emprunt.anne,&Recherche->date_retour.jour,&Recherche->date_retour.mois,&Recherche->date_retour.anne);
        if(strcmp(Recherche->CNE,CNER)==0)
        {
           printf("\nÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´\n");
           gotoxy(0,i);printf("³%d",Recherche->ISBN); gotoxy(13,i);printf("³%s",Recherche->TitreL);gotoxy(48,i);printf("³%s",Recherche->CNE);gotoxy(62,i);printf("³%d/%d/%d",Recherche->date_emprunt.jour,Recherche->date_emprunt.mois,Recherche->date_emprunt.anne);gotoxy(80,i);printf("³%d/%d/%d    ³",Recherche->date_retour.jour,Recherche->date_retour.mois,Recherche->date_retour.anne);

            i+=2;

        }
    }
        printf("\nÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ\n");

    }


    fclose(Precherche);
    free(Recherche);
}

void affichage_de_historique()
{
    //declaration du pointeur sur le fichier et ouverture du fichier
int i=4;
emprunt *afficher;
afficher=malloc(sizeof(emprunt));
afficher->TitreL=malloc(35*sizeof(char));
afficher->CNE=malloc(14*sizeof(char));
FILE *Paffiche;
Paffiche=fopen("historique_emprunt.txt","r");
if(Paffiche==NULL)
{
    printf("erreur lors d'affichage");
}

printf("\n********************************** HISTORIQUE D'EMPRUNTS ***********************************\n");
printf("ÚÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿\n");
printf("³ISBN"); gotoxy(13,2);printf("³TITRE DE LIVRE");gotoxy(48,2);printf("³CNE");gotoxy(62,2);printf("³DATE D'EMPRUNT");gotoxy(80,2);printf("³DATE DE RETOUR³");
//printf("\nÃÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄ´\n");

while(!feof(Paffiche)){
printf("\nÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´\n");
        //le scan des infos de fichier
    fscanf(Paffiche,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&afficher->ISBN,afficher->TitreL,afficher->CNE,&afficher->date_emprunt.jour,&afficher->date_emprunt.mois,&afficher->date_emprunt.anne,&afficher->date_retour.jour,&afficher->date_retour.mois,&afficher->date_retour.anne);
        //affichage
   // printf("\nle %d'eme livre =>\n",i);
    //printf("ISBN: %d , TITRE DE LIVRE : %s , CNE D'ETUDIANT : %d , DATE D'EMPRUNT: %d/%d/%d ,DATE DE RETOUR DE LIVTRE : %d/%d/%d\n",afficher->ISBN,afficher->TitreL,afficher->CNE,afficher->date_emprunt.jour,afficher->date_emprunt.mois,afficher->date_emprunt.anne,afficher->date_retour.jour,afficher->date_retour.mois,afficher->date_retour.anne);
gotoxy(0,i);printf("³%d",afficher->ISBN); gotoxy(13,i);printf("³%s",afficher->TitreL);gotoxy(48,i);printf("³%s",afficher->CNE);gotoxy(62,i);printf("³%d/%d/%d",afficher->date_emprunt.jour,afficher->date_emprunt.mois,afficher->date_emprunt.anne);gotoxy(80,i);printf("³%d/%d/%d    ³",afficher->date_retour.jour,afficher->date_retour.mois,afficher->date_retour.anne);

i+=2;
}

printf("\nÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ\n");

fclose(Paffiche);
free(afficher);
free(afficher->TitreL);
free(afficher->CNE);
}

void supprimer_emprunt()
{
    emprunt *retour;
    retour=malloc(sizeof(emprunt));
    retour->TitreL=malloc(35*sizeof(char));
    retour->CNE=malloc(14*sizeof(char));
    FILE *Ptempsfile;
//    creation de fichier temporaire
    Ptempsfile=fopen("registre_temporaire.txt","w");
    fclose(Ptempsfile);
    FILE *PORIGINE;
    //l'ouverture des  fichoiers avec les modes convonable
    PORIGINE=fopen("registre_emprunt.txt","r");
    Ptempsfile=fopen("registre_temporaire.txt","a");
    if(Ptempsfile==NULL)
        printf("erreur d'overture");
    //l'identification de livre a suuprimé
    int ISBNR;
    printf("entrer l'ISBN du livre retourne: ");
    scanf("%d",&ISBNR);
    int k=1;
    //on verifie si le livre est retourne au temp ou non
    while(!feof(PORIGINE)){
        //le scan des infos de fichier
        fscanf(PORIGINE,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&retour->ISBN,retour->TitreL,retour->CNE,&retour->date_emprunt.jour,&retour->date_emprunt.mois,&retour->date_emprunt.anne,&retour->date_retour.jour,&retour->date_retour.mois,&retour->date_retour.anne);

        if(retour->ISBN == ISBNR)
        {
            k=0;
            printf("\nLE LIVRE  : %s , EST EMPRUNTE PAR L'ETUDIANT DE CNE : %s \n DATE D'EMPRUNT: %d/%d/%d ,DATE DE RETOUR DE LIVTRE : %d/%d/%d\n",retour->TitreL,retour->CNE,retour->date_emprunt.jour,retour->date_emprunt.mois,retour->date_emprunt.anne,retour->date_retour.jour,retour->date_retour.mois,retour->date_retour.anne);
            break;
        }
    }
    fclose(PORIGINE);
if(k==0){
    //comparant la date de retour avec la date d'ajourd'hui
        time_t now=time(NULL);
    struct tm *todaystime = localtime(&now);
    date reel;
    reel.anne=todaystime->tm_year+1900;
    reel.mois=todaystime->tm_mon+1;
    reel.jour=todaystime->tm_mday;
   int c = comparaison_des_dates(reel,retour->date_retour);
   if(c==0){
    printf("la date de retour est exprire le %d/%d/%d ",retour->date_retour.jour,retour->date_retour.mois,retour->date_retour.anne);
    printf("\t\n!! ATTENTION  !!\n\t**VOUS  AVEZ UNE AVERTISSEMENT** ");
    FILE *PADV;
    PADV=fopen("LES ETUDIANTS AVERTIS.txt","a");
    fprintf(PADV,"%d\n",retour->CNE);
fclose(PADV);
   }
   else if(c==1)
    printf("\n MERCI POUR RESPECTER LA DATE DE RETOUR ");

    PORIGINE=fopen("registre_emprunt.txt","r");
    //maintenant on supprime l'enregistrement on veut
    while(!feof(PORIGINE))
    {
        fscanf(PORIGINE,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&retour->ISBN,retour->TitreL,retour->CNE,&retour->date_emprunt.jour,&retour->date_emprunt.mois,&retour->date_emprunt.anne,&retour->date_retour.jour,&retour->date_retour.mois,&retour->date_retour.anne);
        if(retour->ISBN != ISBNR){
        fprintf(Ptempsfile,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",retour->ISBN,retour->TitreL,retour->CNE,retour->date_emprunt.jour,retour->date_emprunt.mois,retour->date_emprunt.anne,retour->date_retour.jour,retour->date_retour.mois,retour->date_retour.anne);
        }
    }
    fclose(PORIGINE);
    fclose(Ptempsfile);

    remove("registre_emprunt.txt");
    rename("registre_temporaire.txt","registre_emprunt.txt");


    getch();
    clearScreen();
    printf("EMPRUNT SUPPRIME");
    getch();
    }
    else
        printf("EMPRUNT N'EXISTE PAS OU DEJA SUPPRIME");

    free(retour);
    free(retour->TitreL);
    free(retour->CNE);

}
int comparaison_des_dates(date reel, date expected)
{
    if( reel.anne > expected.anne ){
            return 0;
    }
    else if(reel.anne == expected.anne){
            if(reel.mois > expected.mois){
                    return 0;
            }
            else if(reel.mois == expected.mois){

                    if(reel.jour>expected.jour){
                        return 0;
                    }
                    else
                        return 1;
                    }
            else
                return 1;
    }
    else
        return 1;
}

int nombre_avertissement()
{
    FILE *NADV;
    NADV=fopen("LES ETUDIANTS AVERTIS.txt","r");
    if(NADV == NULL)
        printf("erreeur d'ouverture de fichier");
    int c =0;//comteur
    char *CNE,*CNET;//le CNE  a compter
    CNE=malloc(14*sizeof(char));
    CNET=malloc(14*sizeof(char));
    printf("ENTRER LE CNE D'ETUDIANT ");
    scanf("%s",CNE);
    while(!feof(NADV))
    {
        fscanf(NADV,"%s",CNET);
        if(strcmp(CNET,CNE)==0)
            c++;
    }
    fclose(NADV);
    clearScreen();
gotoxy(0,0);printf("CODE ETUDIANT  "); gotoxy(15,0);printf(" \tNOMBRE D'AVERTISSEMENT ");
gotoxy(1,1);printf("%s",CNE); gotoxy(17,1);printf("\t    %d",c);
    return c;
}
void LIVRE_DATESR_EXPIRE()
{
    //la date d'aujourd'hui
    time_t now=time(NULL);
    struct tm *curr_time=localtime(&now);
    date currnttime;
    currnttime.anne=curr_time->tm_year+1900;
    currnttime.mois=curr_time->tm_mon+1;
    currnttime.jour=curr_time->tm_mday;
    //extraction des infos de fichier
     emprunt * retour;
     retour=malloc(sizeof(emprunt));
     retour->TitreL=malloc(35*sizeof(char));
     retour->CNE=malloc(15*sizeof(char));

     FILE * PORIGINE;
     PORIGINE=fopen("registre_emprunt.txt","r");
     int c=1,k=0;
     while(!feof(PORIGINE)){
        fscanf(PORIGINE,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&retour->ISBN,retour->TitreL,retour->CNE,&retour->date_emprunt.jour,&retour->date_emprunt.mois,&retour->date_emprunt.anne,&retour->date_retour.jour,&retour->date_retour.mois,&retour->date_retour.anne);
        //comparaison des dates

       c=comparaison_des_dates(currnttime,retour->date_retour);
        if(c==0){
            printf("\nLe Livre: %s DEVRAIT ETRE DEPOSE LE %d/%d/%d PAR L'ETUDIANT %s \n ",retour->TitreL,retour->date_retour.jour,retour->date_retour.mois,retour->date_retour.anne,retour->CNE);
            k=1;
        }
     }
     if(k==0)
        printf("AUCUNE DATE N'EST EXPRE");


    fclose(PORIGINE);
    free(retour);
    free(retour->TitreL);
    free(retour->CNE);

}

void verfie_emprunt()
{
     printf("\t******************* VERIFIER UNE EMPRUNTE *******************\n");
    //les variable ou on vas stocker
    char *CNER;
    CNER=malloc(14*sizeof(char));
    int c=0;
    emprunt *Recherche;
    Recherche=malloc(sizeof(emprunt));
    Recherche->TitreL=malloc(25*sizeof(char));
    Recherche->CNE=malloc(14*sizeof(char));


    //ouverture de fichier
    FILE *Precherche;
    Precherche=fopen("registre_emprunt.txt","r");

    //stockage des données
    printf("entrer votre CNE : ");
    scanf("%s",CNER);
     //exraction de fichier et comparaison
    clearScreen();
    printf("VOTRE EMPRUNTS SONT => \n");
    getch();
    while(!feof(Precherche)){
        //le scan des infos de fichier
        fscanf(Precherche,"%d\t%s\t%s\t%d\t%d\t%d\t%d\t%d\t%d\n",&Recherche->ISBN,Recherche->TitreL,Recherche->CNE,&Recherche->date_emprunt.jour,&Recherche->date_emprunt.mois,&Recherche->date_emprunt.anne,&Recherche->date_retour.jour,&Recherche->date_retour.mois,&Recherche->date_retour.anne);
        if(strcmp(Recherche->CNE,CNER)== 0)
        {
            c==1;

           printf("LE LIVRE : %s \t\t",Recherche->TitreL); printf(" LA DATE DE RETOUR EST LE %d/%d/%d",Recherche->date_retour.jour,Recherche->date_retour.mois,Recherche->date_retour.anne);
            printf("\n");
        }
    }
    if(c==0)
        {

            printf("VOUS N'AVEZ PAS D'EMPRUNT");
        }
        fclose(Precherche);
        free(Recherche);
        free(Recherche->TitreL);
        free(Recherche->CNE);
        free(CNER);
}
int main()
{
 AJOUT_EMPRUNT();
  //affichage_en_cour();
 // affichage_de_historique();
 //supprimer_emprunt();
 //Recherche_emprunt();
// verfie_emprunt();
//nombre_avertissement();
//Recherche_Historique();

    return 0;
}
